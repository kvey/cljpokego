nil (do (set! *warn-on-reflection* nil) (require (quote cljsbuild.compiler) (quote cljsbuild.crossover) (quote cljsbuild.util)) (try (do (clojure.core/letfn [(copy-crossovers__1339__auto__ [] (cljsbuild.crossover/copy-crossovers "/home/kveykva/cljpokego/target/cljsbuild-crossover" (quote [])))] (copy-crossovers__1339__auto__) (clojure.core/when false (cljsbuild.util/once-every-bg 1000 "copying crossovers" copy-crossovers__1339__auto__)) (clojure.core/let [crossover-macro-paths__1340__auto__ (cljsbuild.crossover/crossover-macro-paths (quote [])) builds__1341__auto__ (clojure.core/for [opts__1342__auto__ (quote ({:source-paths ["src/cljs"], :jar false, :notify-command nil, :incremental true, :assert true, :compiler {:output-to "resources/public/main.js", :externs ["closure-js/externs"], :libs ["closure-js/libs"], :optimizations :whitespace, :pretty-print true, :output-dir "/home/kveykva/cljpokego/target/cljsbuild-compiler-0"}, :id :cljs-client, :parsed-notify-command {:shell ()}}))] [opts__1342__auto__ (cljs.env/default-compiler-env (:compiler opts__1342__auto__))])] (clojure.core/doseq [[build__1343__auto__ compiler-env__1344__auto__] builds__1341__auto__] (clojure.core/doseq [handler__1345__auto__ (:warning-handlers build__1343__auto__)] (clojure.core/when (clojure.core/symbol? handler__1345__auto__) (clojure.core/let [[n__1346__auto__ sym__1347__auto__] (clojure.string/split (clojure.core/str handler__1345__auto__) #"/")] (clojure.core/assert (clojure.core/and n__1346__auto__ sym__1347__auto__) (clojure.core/str "Symbols for :warning-handlers must be fully-qualified, " (clojure.core/pr-str handler__1345__auto__) " is missing namespace.")) (clojure.core/when (clojure.core/and n__1346__auto__ sym__1347__auto__) (clojure.core/require (clojure.core/symbol n__1346__auto__))))))) (clojure.core/loop [dependency-mtimes__1348__auto__ (clojure.core/repeat (clojure.core/count builds__1341__auto__) {})] (clojure.core/let [builds-mtimes__1349__auto__ (clojure.core/map clojure.core/vector builds__1341__auto__ dependency-mtimes__1348__auto__) new-dependency-mtimes__1350__auto__ (clojure.core/doall (clojure.core/for [[[build__1343__auto__ compiler-env__1344__auto__] mtimes__1351__auto__] builds-mtimes__1349__auto__] (cljs.analyzer/with-warning-handlers (clojure.core/if-let [handlers__1352__auto__ (:warning-handlers build__1343__auto__)] (clojure.core/mapv (clojure.core/fn [handler__1345__auto__] (if (clojure.core/symbol? handler__1345__auto__) (clojure.core/resolve handler__1345__auto__) handler__1345__auto__)) (clojure.core/eval handlers__1352__auto__)) cljs.analyzer/*cljs-warning-handlers*) (clojure.core/binding [cljs.env/*compiler* compiler-env__1344__auto__] (cljsbuild.compiler/run-compiler (:source-paths build__1343__auto__) (quote []) "/home/kveykva/cljpokego/target/cljsbuild-crossover" crossover-macro-paths__1340__auto__ (:compiler build__1343__auto__) (:parsed-notify-command build__1343__auto__) (:incremental build__1343__auto__) (:assert build__1343__auto__) mtimes__1351__auto__ false)))))] (clojure.core/when false (java.lang.Thread/sleep 100) (recur new-dependency-mtimes__1350__auto__))))))) (catch cljsbuild.test.TestsFailedException e__1286__auto__ (java.lang.System/exit 1)) (catch java.lang.Exception e__1286__auto__ (do (.printStackTrace e__1286__auto__) (java.lang.System/exit 1)))))